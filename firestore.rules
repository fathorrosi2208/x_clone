rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read and write their own user document
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, update: if request.auth != null && request.auth.uid == userId;
      
      // Allow access to liked_tweets subcollection
      match /liked_tweets/{tweetId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Rules for tweets collection
    match /tweets/{tweetId} {
      // Allow authenticated users to read all tweets
      allow read: if request.auth != null;
      
      // Allow authenticated users to create tweets
      allow create: if request.auth != null 
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.tweetContent is string
        && request.resource.data.tweetContent.size() > 0
        && request.resource.data.tweetContent.size() <= 280
        && request.resource.data.likesCount == 0
        && request.resource.data.commentsCount == 0;
      
      // Allow users to delete their own tweets
      allow delete: if request.auth != null 
        && resource.data.userId == request.auth.uid;
        
      // Allow updates only for like/unlike operations
      allow update: if request.auth != null
        && request.resource.data.diff(resource.data).affectedKeys()
           .hasOnly(['likesCount', 'commentsCount']);
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
